@import '@stihl-design-system/components/styles/scss';

// **************************************************************
// The STIHL Design System Grid mixin is used in this example app.
// It is based on the native CSS Grid and provides a simple way to create
// responsive grid layouts.
// The STIHL Design System Grid is built to be used in a standard 'row-based' layout
// where every row is a grid container and every column is a grid item.
// See full documentation for the STIHL Design System Grid at:
// https://main--63440bbb95889041542a5ba3.chromatic.com/?path=/docs/styles-grid-grid--documentation
// **************************************************************
.top-bar {
  // Initializes the grid layout for the top bar container.
  // This enables us to place the contents inside the top bar along
  // the predefined grid areas.
  @include ds-grid;

  min-height: max-content;
  background: $ds-color-core-grey-mid;
}

.top-bar-content {
  // Places the top-bar-content element in the predefined 'main' column.
  @include ds-grid-main-column;
}

.hero {
  // Initializes the grid layout for the top bar container.
  // This enables us to place the contents inside the hero section along
  // the predefined grid areas.
  @include ds-grid;
}

.hero-image {
  // To span the hero image section across the full width of the
  // predefined 'extended' area, we use the ds-grid-extended-column mixin.
  // Extended columns are wider than the main columns but not full viewport width.
  @include ds-grid-extended-column;

  // **************************************************************
  // IMPORTANT: We need to hardcode the basePath to /quickstart-templates
  // to ensure the image paths are correct when deploying to our GitHub Pages.
  // Please adjust the image paths to match your project structure.
  // **************************************************************

  // Default mobile background image for browsers that do not support image-set.
  background-image: url(/quickstart-templates/hero-bg-mobile.jpg);
  // The images are optimized in size for mobile devices.
  // Using image-set to provide multiple image formats and resolutions for the mobile background.
  // This allows the browser to choose the best-supported format and resolution.
  // 2x resolution images are used for high-density displays (e.g. Retina displays - add 3x if necessary).
  background-image: image-set(
    url(/quickstart-templates/hero-bg-mobile.avif) type('image/avif') 1x,
    url(/quickstart-templates/hero-bg-mobile_2x.avif) type('image/avif') 2x,
    url(/quickstart-templates/hero-bg-mobile.webp) type('image/webp') 1x,
    url(/quickstart-templates/hero-bg-mobile_2x.webp) type('image/webp') 2x,
    url(/quickstart-templates/hero-bg-mobile.jpg) type('image/jpeg') 1x,
    url(/quickstart-templates/hero-bg-mobile_2x.jpg) type('image/jpeg') 2x
  );

  // Ensures the background image covers the entire element.
  background-size: cover;
  // Positions the background image at the center of the element.
  background-position: center center;
  height: 200px;

  // Using subgrid to inherit the grid layout from the parent element.
  display: grid;
  grid-template-columns: subgrid;

  // Media query for minimum screen size defined by ds-media-query-min('m') mixin.
  @include ds-media-query-min('m') {
    // Default background image for larger screens as a fallback.
    background-image: url(/quickstart-templates/hero-bg.jpg);
    // Using image-set to provide multiple supported image formats for larger screens.
    background-image: image-set(
      url(/quickstart-templates/hero-bg.avif) type('image/avif'),
      url(/quickstart-templates/hero-bg.webp) type('image/webp'),
      url(/quickstart-templates/hero-bg.jpg) type('image/jpeg')
    );
  }
}

.hero-image-title {
  // Places the hero-image-title-wrapper element in the predefined 'main' column.
  @include ds-grid-main-column;
  background: white;
  width: 100%;
  margin-block-start: auto;
  margin-block-end: $ds-spacing-24;
  padding-block: $ds-spacing-16;
  padding-inline: $ds-spacing-16;

  @include ds-media-query-min('m') {
    margin-block-end: $ds-spacing-32;
    padding-block: $ds-spacing-24;
    padding-inline: $ds-spacing-24;
  }

  @include ds-media-query-min('xl') {
    margin-block-end: $ds-spacing-40;
    padding-block: $ds-spacing-32;
    padding-inline: $ds-spacing-32;
  }
}
